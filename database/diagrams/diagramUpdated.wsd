@startuml

' !define ENTITY
!define PRIMARY_KEY(x) <b><color:blue>x</color></b>
!define FOREIGN_KEY(x) <color:green>x</color>

hide circle


' estado en clases
' table intermedia user cribroom
' rever forms
' buscar plantillas de forms en internet
    ' es algo bastante gral y ya conocido
' dates
' entidades para historial de estados
' guardar periodos de aprobacion
' guardar historial de payout/tarifa
' cambiar nombre por historial de costos
' usar hexadecimal primary keys

' diagramar Form
    ' decision tree con single choice resuelto
    ' queda:
        ' resuelto:
            ' if multiple choice
                ' -> insert Question fk
            ' else
                ' -> Question fk null
            ' eliminar text option in question type
            ' Choice insert nextQuestion fk
                ' -> puede ser null
            
        ' decision tree con multiple choices
        ' question despues de choice sin ser conditionalChoice
' tema forms resuelto implementando Google Forms API
    ' buscar pricing
    ' implementar api
    ' usar django para el manejo de roles
    ' buscar manera mas eficiente para visualizacion de data
' diagram states en entities ( deleted = default = False )
' diagramar UML

' Padrones
    ' Children
        ' Users
            ' Gender
            ' Cribroom
            ' Shift
            ' User
            ' Guardian
            ' Children_state
            ' Padron


entity Cribroom {
    + PRIMARY_KEY(id)
    --
    max_capacity
    --
    FOREIGN_KEY(Adress)
    FOREIGN_KEY(Zone)
    FOREIGN_KEY(Shift)
}
' Cribroom muchos a muchos Shift
' Cribroom puede tener mañana y tarde o solo mañana, etc


entity Desinfection {
    + PRIMARY_KEY(id)
    --
    desinfection_date
    company
    company_phone
    --
    FOREIGN_KEY(Cribroom)
}
Desinfection "*" -- "1" Cribroom

entity Payout {
    + PRIMARY_KEY(id)
    --
    amount
    month
    --
    FOREIGN_KEY(Zone)
    ' Payout_Adress = capital or upcountry
}

entity Zone {
    + PRIMARY_KEY(id)
    --
    name
    --

    ' interior or capital
}

Payout "*" - "1" Zone
Zone "1" - "*" Cribroom

entity Child {
    + PRIMARY_KEY(id)
    --
    first_name
    last_name
    dni
    birthdate
    registration_date
    disenroll_date
    --
    FOREIGN_KEY(Gender)
    FOREIGN_KEY(Cribroom)
    FOREIGN_KEY(Shift)
    social_worker = FOREIGN_KEY(User)
    FOREIGN_KEY(Guardian)
    FOREIGN_KEY(Child_state)
}

Cribroom "1" - "*" Child

entity User {
    + PRIMARY_KEY(id)
    --
    username
    password
    --
    FOREIGN_KEY(User_email)
    FOREIGN_KEY(Role)
}

entity Cribroom_User {
    + PRIMARY_KEY(id)
    --

    --
    FOREIGN_KEY(Cribroom)
    FOREIGN_KEY(User)
}

Cribroom "1" - "*" Cribroom_User
Cribroom_User "*" - "1" User


entity Guardian {
    + PRIMARY_KEY(id)
    --
    first_name
    last_name
    dni 
    birthdate
    --
    FOREIGN_KEY(Guardian_phone)
    FOREIGN_KEY(Gender)
}

Child "*" -- "1" Guardian

entity Form {
    + PRIMARY_KEY(id)
    --
    generation_date
    --
    FOREIGN_KEY(Cribroom_User)
    FOREIGN_KEY(Role)
}

Cribroom_User "*" -- "1" Form



@enduml